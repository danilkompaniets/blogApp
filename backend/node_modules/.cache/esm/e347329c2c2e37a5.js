let express,dotenv,errorResponserHandler,invalidPathHandler,connectDB,userRoutes;_2c2‍.w("express",[["default",["express"],function(v){express=v}]]);_2c2‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_2c2‍.w("./middleware/errorHandler.js",[["errorResponserHandler",["errorResponserHandler"],function(v){errorResponserHandler=v}],["invalidPathHandler",["invalidPathHandler"],function(v){invalidPathHandler=v}]]);_2c2‍.w("./config/db.js",[["default",["connectDB"],function(v){connectDB=v}]]);_2c2‍.w("./routes/userRoutes.js",[["default",["userRoutes"],function(v){userRoutes=v}]]);










dotenv.config();
connectDB();
const app = express();
app.use(express.json());

app.get("/", (req, res) => {
  res.send("server is running...");
});

app.use("/api/users", userRoutes);

app.use(invalidPathHandler);
app.use(errorResponserHandler);

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => {
  _2c2‍.g.console.log("server is running on port: ", PORT);
});
